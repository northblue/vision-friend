{
    "sourceFile": "app/page.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1758543910427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1758544265998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,32 +4,49 @@\n \n interface CloudinaryImage {\n   public_id: string;\n   secure_url: string;\n+  width?: number;\n+  height?: number;\n+  created_at?: string;\n }\n \n export default function HomePage() {\n   const [images, setImages] = useState<CloudinaryImage[]>([]);\n+  const [loading, setLoading] = useState(true);\n \n   useEffect(() => {\n+    setLoading(true);\n     fetch(\"/api/images\")\n       .then((res) => res.json())\n-      .then((data) => setImages(data));\n+      .then((data) => {\n+        if (Array.isArray(data)) setImages(data);\n+        else setImages([]);\n+      })\n+      .catch(() => setImages([]))\n+      .finally(() => setLoading(false));\n   }, []);\n \n   return (\n     <main className=\"p-6\">\n       <h1 className=\"text-2xl font-bold mb-4\">Vision Friend Gallery 🎨</h1>\n-      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n-        {images.map((img) => (\n-          <div key={img.public_id} className=\"rounded-lg overflow-hidden shadow\">\n-            <img\n-              src={img.secure_url}\n-              alt={img.public_id}\n-              className=\"w-full h-auto object-cover\"\n-            />\n-          </div>\n-        ))}\n-      </div>\n+\n+      {loading ? (\n+        <p>Loading...</p>\n+      ) : images.length === 0 ? (\n+        <p>No images found in the folder.</p>\n+      ) : (\n+        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n+          {images.map((img) => (\n+            <div key={img.public_id} className=\"rounded-lg overflow-hidden shadow\">\n+              <img\n+                src={img.secure_url}\n+                alt={img.public_id}\n+                className=\"w-full h-auto object-cover\"\n+              />\n+            </div>\n+          ))}\n+        </div>\n+      )}\n     </main>\n   );\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1758545026514,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n   }, []);\n \n   return (\n     <main className=\"p-6\">\n-      <h1 className=\"text-2xl font-bold mb-4\">Vision Friend Gallery 🎨</h1>\n+      <h1 className=\"text-2xl font-bold mb-4\">--dddd--Vision Friend Gallery 🎨</h1>\n \n       {loading ? (\n         <p>Loading...</p>\n       ) : images.length === 0 ? (\n"
                },
                {
                    "date": 1758545036583,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n   }, []);\n \n   return (\n     <main className=\"p-6\">\n-      <h1 className=\"text-2xl font-bold mb-4\">--dddd--Vision Friend Gallery 🎨</h1>\n+      <h1 className=\"text-2xl font-bold mb-4\">Vision Friend Gallery 🎨</h1>\n \n       {loading ? (\n         <p>Loading...</p>\n       ) : images.length === 0 ? (\n"
                },
                {
                    "date": 1758545319865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,49 +4,32 @@\n \n interface CloudinaryImage {\n   public_id: string;\n   secure_url: string;\n-  width?: number;\n-  height?: number;\n-  created_at?: string;\n }\n \n export default function HomePage() {\n   const [images, setImages] = useState<CloudinaryImage[]>([]);\n-  const [loading, setLoading] = useState(true);\n \n   useEffect(() => {\n-    setLoading(true);\n     fetch(\"/api/images\")\n       .then((res) => res.json())\n-      .then((data) => {\n-        if (Array.isArray(data)) setImages(data);\n-        else setImages([]);\n-      })\n-      .catch(() => setImages([]))\n-      .finally(() => setLoading(false));\n+      .then((data) => setImages(data));\n   }, []);\n \n   return (\n     <main className=\"p-6\">\n       <h1 className=\"text-2xl font-bold mb-4\">Vision Friend Gallery 🎨</h1>\n-\n-      {loading ? (\n-        <p>Loading...</p>\n-      ) : images.length === 0 ? (\n-        <p>No images found in the folder.</p>\n-      ) : (\n-        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n-          {images.map((img) => (\n-            <div key={img.public_id} className=\"rounded-lg overflow-hidden shadow\">\n-              <img\n-                src={img.secure_url}\n-                alt={img.public_id}\n-                className=\"w-full h-auto object-cover\"\n-              />\n-            </div>\n-          ))}\n-        </div>\n-      )}\n+      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n+        {images.map((img) => (\n+          <div key={img.public_id} className=\"rounded-lg overflow-hidden shadow\">\n+            <img\n+              src={img.secure_url}\n+              alt={img.public_id}\n+              className=\"w-full h-auto object-cover\"\n+            />\n+          </div>\n+        ))}\n+      </div>\n     </main>\n   );\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1758545451384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,35 +1,33 @@\n-\"use client\";\n+import { NextResponse } from \"next/server\";\n+import cloudinary from \"../../../lib/cloudinary\";\n \n-import { useEffect, useState } from \"react\";\n+export async function GET() {\n+  try {\n+    const prefix = process.env.CLOUDINARY_FOLDER || \"\";\n+    const allResources: any[] = [];\n+    let nextCursor: string | undefined = undefined;\n \n-interface CloudinaryImage {\n-  public_id: string;\n-  secure_url: string;\n-}\n+    do {\n+      const res = await cloudinary.api.resources({\n+        type: \"upload\",\n+        prefix,\n+        max_results: 100,      // 每页最多 100 张\n+        next_cursor: nextCursor,\n+        resource_type: \"image\",\n+      });\n \n-export default function HomePage() {\n-  const [images, setImages] = useState<CloudinaryImage[]>([]);\n+      if (res.resources?.length) {\n+        allResources.push(...res.resources); // 注意这里是 push，不是覆盖\n+      }\n \n-  useEffect(() => {\n-    fetch(\"/api/images\")\n-      .then((res) => res.json())\n-      .then((data) => setImages(data));\n-  }, []);\n+      nextCursor = res.next_cursor; // 如果有下一页，继续循环\n+    } while (nextCursor);\n \n-  return (\n-    <main className=\"p-6\">\n-      <h1 className=\"text-2xl font-bold mb-4\">Vision Friend Gallery 🎨</h1>\n-      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n-        {images.map((img) => (\n-          <div key={img.public_id} className=\"rounded-lg overflow-hidden shadow\">\n-            <img\n-              src={img.secure_url}\n-              alt={img.public_id}\n-              className=\"w-full h-auto object-cover\"\n-            />\n-          </div>\n-        ))}\n-      </div>\n-    </main>\n-  );\n+    // 按创建时间倒序排列\n+    allResources.sort((a, b) => (a.created_at < b.created_at ? 1 : -1));\n+\n+    return NextResponse.json(allResources);\n+  } catch (error: any) {\n+    return NextResponse.json({ error: error.message }, { status: 500 });\n+  }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1758545464532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,33 +1,35 @@\n-import { NextResponse } from \"next/server\";\n-import cloudinary from \"../../../lib/cloudinary\";\n+\"use client\";\n \n-export async function GET() {\n-  try {\n-    const prefix = process.env.CLOUDINARY_FOLDER || \"\";\n-    const allResources: any[] = [];\n-    let nextCursor: string | undefined = undefined;\n+import { useEffect, useState } from \"react\";\n \n-    do {\n-      const res = await cloudinary.api.resources({\n-        type: \"upload\",\n-        prefix,\n-        max_results: 100,      // 每页最多 100 张\n-        next_cursor: nextCursor,\n-        resource_type: \"image\",\n-      });\n+interface CloudinaryImage {\n+  public_id: string;\n+  secure_url: string;\n+}\n \n-      if (res.resources?.length) {\n-        allResources.push(...res.resources); // 注意这里是 push，不是覆盖\n-      }\n+export default function HomePage() {\n+  const [images, setImages] = useState<CloudinaryImage[]>([]);\n \n-      nextCursor = res.next_cursor; // 如果有下一页，继续循环\n-    } while (nextCursor);\n+  useEffect(() => {\n+    fetch(\"/api/images\")\n+      .then((res) => res.json())\n+      .then((data) => setImages(data));\n+  }, []);\n \n-    // 按创建时间倒序排列\n-    allResources.sort((a, b) => (a.created_at < b.created_at ? 1 : -1));\n-\n-    return NextResponse.json(allResources);\n-  } catch (error: any) {\n-    return NextResponse.json({ error: error.message }, { status: 500 });\n-  }\n+  return (\n+    <main className=\"p-6\">\n+      <h1 className=\"text-2xl font-bold mb-4\">Vision Friend Gallery 🎨</h1>\n+      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n+        {images.map((img) => (\n+          <div key={img.public_id} className=\"rounded-lg overflow-hidden shadow\">\n+            <img\n+              src={img.secure_url}\n+              alt={img.public_id}\n+              className=\"w-full h-auto object-cover\"\n+            />\n+          </div>\n+        ))}\n+      </div>\n+    </main>\n+  );\n }\n\\ No newline at end of file\n"
                }
            ],
            "date": 1758543910427,
            "name": "Commit-0",
            "content": "\"use client\";\n\nimport { useEffect, useState } from \"react\";\n\ninterface CloudinaryImage {\n  public_id: string;\n  secure_url: string;\n}\n\nexport default function HomePage() {\n  const [images, setImages] = useState<CloudinaryImage[]>([]);\n\n  useEffect(() => {\n    fetch(\"/api/images\")\n      .then((res) => res.json())\n      .then((data) => setImages(data));\n  }, []);\n\n  return (\n    <main className=\"p-6\">\n      <h1 className=\"text-2xl font-bold mb-4\">Vision Friend Gallery 🎨</h1>\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n        {images.map((img) => (\n          <div key={img.public_id} className=\"rounded-lg overflow-hidden shadow\">\n            <img\n              src={img.secure_url}\n              alt={img.public_id}\n              className=\"w-full h-auto object-cover\"\n            />\n          </div>\n        ))}\n      </div>\n    </main>\n  );\n}"
        }
    ]
}